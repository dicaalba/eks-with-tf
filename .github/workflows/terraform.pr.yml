name: Terraform Validate and Plan

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  ACTIONS_STEP_DEBUG: true
  ACTIONS_RUNNER_DEBUG: true

jobs:
  # Job para configurar credenciales de AWS y preparar el entorno
  setup:
    name: Setup AWS and Terraform
    runs-on: ubuntu-latest
    environment: main
    defaults:
      run:
        shell: bash

    steps:
      # Configurar las credenciales de AWS
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::031842254778:role/github-assume-role
          role-session-name: github-assume-session

      # Checkout el código del repositorio
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Configurar Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6

  # Job para validar y formatear la configuración de Terraform
  validate:
    name: Terraform Validate and Format
    runs-on: ubuntu-latest
    needs: setup  # Dependemos del job de setup
    environment: main
    defaults:
      run:
        shell: bash

    steps:
      # Validar la configuración de Terraform
      - name: Terraform Validate
        run: |
          cd terraform
          terraform init -input=false || echo "Terraform init already run"
          terraform validate

      # Asegurar que el código de Terraform está formateado correctamente
      - name: Terraform Format
        run: |
          cd terraform
          terraform fmt -write

  # Job para generar el plan de Terraform
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: validate  # Dependemos del job de validate
    environment: main
    defaults:
      run:
        shell: bash

    steps:
      # Generar el plan de ejecución de Terraform
      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -out=tfplan

  # Job para aplicar el plan de Terraform (si se desea aplicar)
  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan  # Dependemos del job de plan
    environment: main
    defaults:
      run:
        shell: bash

    steps:
      # Aplicar el plan generado por Terraform
      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -input=false -auto-approve tfplan
