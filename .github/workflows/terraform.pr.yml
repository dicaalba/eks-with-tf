name: Terraform Validate and Plan

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  ACTIONS_STEP_DEBUG: true
  ACTIONS_RUNNER_DEBUG: true

jobs:
  # Job para validar la configuración de Terraform
  validate:
    name: Terraform Validate and Plan
    runs-on: ubuntu-latest
    environment: main
    defaults:
      run:
        shell: bash

    steps:

      ####### Configuración Inicial #######

      # Configurar las credenciales de AWS
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::031842254778:role/github-assume-role
          role-session-name: github-assume-session

      # Checkout el código del repositorio
      - name: Checkout Repository
        uses: actions/checkout@v3

      ####### Configuración de Terraform #######

      # Configurar Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6

      ####### Validación de Terraform #######

      # Validar la configuración de Terraform
      - name: Terraform Validate
        run: |
          cd terraform
          terraform init -input=false || echo "Terraform init already run"
          terraform validate

      ####### Formato de Terraform #######

      # Asegurar que el código está formateado correctamente
      - name: Terraform Format
        run: |
          cd terraform
          terraform fmt -write

      ####### Generación del Plan de Terraform #######

      # Generar el plan de ejecución de Terraform
      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -lock=false -out=tfplan

    # Destroy the resources
      - name: Terraform Destroy
        run: |
          cd terraform
          terraform destroy -lock=false -auto-approve


      ####### Aplicación del Plan de Terraform #######

      # Aplicar el plan generado por Terraform (si es necesario)
       # - name: Terraform Apply
      #    run: |
       #     cd terraform
       #     terraform apply -lock=false -input=false -auto-approve tfplan
